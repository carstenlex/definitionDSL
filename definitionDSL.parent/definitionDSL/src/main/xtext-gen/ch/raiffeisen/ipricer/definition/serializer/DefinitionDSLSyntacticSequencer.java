/*
 * generated by Xtext 2.9.2
 */
package ch.raiffeisen.ipricer.definition.serializer;

import ch.raiffeisen.ipricer.definition.services.DefinitionDSLGrammarAccess;
import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public class DefinitionDSLSyntacticSequencer extends AbstractSyntacticSequencer {

	protected DefinitionDSLGrammarAccess grammarAccess;
	protected AbstractElementAlias match_Data_DEF_COMMENTTerminalRuleCall_2_0_a;
	protected AbstractElementAlias match_Data_DEF_COMMENTTerminalRuleCall_2_0_p;
	protected AbstractElementAlias match_InitSection_DEF_COMMENTTerminalRuleCall_2_0_a;
	protected AbstractElementAlias match_InitSection_DEF_COMMENTTerminalRuleCall_2_0_p;
	protected AbstractElementAlias match_OptionListSection_DEF_COMMENTTerminalRuleCall_2_0_a;
	protected AbstractElementAlias match_OptionListSection_DEF_COMMENTTerminalRuleCall_2_0_p;
	protected AbstractElementAlias match_OptionMaskSection_DEF_COMMENTTerminalRuleCall_2_0_a;
	protected AbstractElementAlias match_OptionMaskSection_DEF_COMMENTTerminalRuleCall_2_0_p;
	protected AbstractElementAlias match_TypeMaskSection_DEF_COMMENTTerminalRuleCall_2_0_a;
	protected AbstractElementAlias match_TypeMaskSection_DEF_COMMENTTerminalRuleCall_2_0_p;
	protected AbstractElementAlias match_UnderlyingListSection_DEF_COMMENTTerminalRuleCall_2_0_a;
	protected AbstractElementAlias match_UnderlyingListSection_DEF_COMMENTTerminalRuleCall_2_0_p;
	protected AbstractElementAlias match_UnderlyingMaskSection_DEF_COMMENTTerminalRuleCall_2_0_a;
	protected AbstractElementAlias match_UnderlyingMaskSection_DEF_COMMENTTerminalRuleCall_2_0_p;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (DefinitionDSLGrammarAccess) access;
		match_Data_DEF_COMMENTTerminalRuleCall_2_0_a = new TokenAlias(true, true, grammarAccess.getDataAccess().getDEF_COMMENTTerminalRuleCall_2_0());
		match_Data_DEF_COMMENTTerminalRuleCall_2_0_p = new TokenAlias(true, false, grammarAccess.getDataAccess().getDEF_COMMENTTerminalRuleCall_2_0());
		match_InitSection_DEF_COMMENTTerminalRuleCall_2_0_a = new TokenAlias(true, true, grammarAccess.getInitSectionAccess().getDEF_COMMENTTerminalRuleCall_2_0());
		match_InitSection_DEF_COMMENTTerminalRuleCall_2_0_p = new TokenAlias(true, false, grammarAccess.getInitSectionAccess().getDEF_COMMENTTerminalRuleCall_2_0());
		match_OptionListSection_DEF_COMMENTTerminalRuleCall_2_0_a = new TokenAlias(true, true, grammarAccess.getOptionListSectionAccess().getDEF_COMMENTTerminalRuleCall_2_0());
		match_OptionListSection_DEF_COMMENTTerminalRuleCall_2_0_p = new TokenAlias(true, false, grammarAccess.getOptionListSectionAccess().getDEF_COMMENTTerminalRuleCall_2_0());
		match_OptionMaskSection_DEF_COMMENTTerminalRuleCall_2_0_a = new TokenAlias(true, true, grammarAccess.getOptionMaskSectionAccess().getDEF_COMMENTTerminalRuleCall_2_0());
		match_OptionMaskSection_DEF_COMMENTTerminalRuleCall_2_0_p = new TokenAlias(true, false, grammarAccess.getOptionMaskSectionAccess().getDEF_COMMENTTerminalRuleCall_2_0());
		match_TypeMaskSection_DEF_COMMENTTerminalRuleCall_2_0_a = new TokenAlias(true, true, grammarAccess.getTypeMaskSectionAccess().getDEF_COMMENTTerminalRuleCall_2_0());
		match_TypeMaskSection_DEF_COMMENTTerminalRuleCall_2_0_p = new TokenAlias(true, false, grammarAccess.getTypeMaskSectionAccess().getDEF_COMMENTTerminalRuleCall_2_0());
		match_UnderlyingListSection_DEF_COMMENTTerminalRuleCall_2_0_a = new TokenAlias(true, true, grammarAccess.getUnderlyingListSectionAccess().getDEF_COMMENTTerminalRuleCall_2_0());
		match_UnderlyingListSection_DEF_COMMENTTerminalRuleCall_2_0_p = new TokenAlias(true, false, grammarAccess.getUnderlyingListSectionAccess().getDEF_COMMENTTerminalRuleCall_2_0());
		match_UnderlyingMaskSection_DEF_COMMENTTerminalRuleCall_2_0_a = new TokenAlias(true, true, grammarAccess.getUnderlyingMaskSectionAccess().getDEF_COMMENTTerminalRuleCall_2_0());
		match_UnderlyingMaskSection_DEF_COMMENTTerminalRuleCall_2_0_p = new TokenAlias(true, false, grammarAccess.getUnderlyingMaskSectionAccess().getDEF_COMMENTTerminalRuleCall_2_0());
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getDEF_COMMENTRule())
			return getDEF_COMMENTToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * terminal DEF_COMMENT 	: '#' !('\n'|'\r')* ('\r'? '\n')?;
	 */
	protected String getDEF_COMMENTToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "#";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_Data_DEF_COMMENTTerminalRuleCall_2_0_a.equals(syntax))
				emit_Data_DEF_COMMENTTerminalRuleCall_2_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Data_DEF_COMMENTTerminalRuleCall_2_0_p.equals(syntax))
				emit_Data_DEF_COMMENTTerminalRuleCall_2_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_InitSection_DEF_COMMENTTerminalRuleCall_2_0_a.equals(syntax))
				emit_InitSection_DEF_COMMENTTerminalRuleCall_2_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_InitSection_DEF_COMMENTTerminalRuleCall_2_0_p.equals(syntax))
				emit_InitSection_DEF_COMMENTTerminalRuleCall_2_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_OptionListSection_DEF_COMMENTTerminalRuleCall_2_0_a.equals(syntax))
				emit_OptionListSection_DEF_COMMENTTerminalRuleCall_2_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_OptionListSection_DEF_COMMENTTerminalRuleCall_2_0_p.equals(syntax))
				emit_OptionListSection_DEF_COMMENTTerminalRuleCall_2_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_OptionMaskSection_DEF_COMMENTTerminalRuleCall_2_0_a.equals(syntax))
				emit_OptionMaskSection_DEF_COMMENTTerminalRuleCall_2_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_OptionMaskSection_DEF_COMMENTTerminalRuleCall_2_0_p.equals(syntax))
				emit_OptionMaskSection_DEF_COMMENTTerminalRuleCall_2_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TypeMaskSection_DEF_COMMENTTerminalRuleCall_2_0_a.equals(syntax))
				emit_TypeMaskSection_DEF_COMMENTTerminalRuleCall_2_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_TypeMaskSection_DEF_COMMENTTerminalRuleCall_2_0_p.equals(syntax))
				emit_TypeMaskSection_DEF_COMMENTTerminalRuleCall_2_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_UnderlyingListSection_DEF_COMMENTTerminalRuleCall_2_0_a.equals(syntax))
				emit_UnderlyingListSection_DEF_COMMENTTerminalRuleCall_2_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_UnderlyingListSection_DEF_COMMENTTerminalRuleCall_2_0_p.equals(syntax))
				emit_UnderlyingListSection_DEF_COMMENTTerminalRuleCall_2_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_UnderlyingMaskSection_DEF_COMMENTTerminalRuleCall_2_0_a.equals(syntax))
				emit_UnderlyingMaskSection_DEF_COMMENTTerminalRuleCall_2_0_a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_UnderlyingMaskSection_DEF_COMMENTTerminalRuleCall_2_0_p.equals(syntax))
				emit_UnderlyingMaskSection_DEF_COMMENTTerminalRuleCall_2_0_p(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     DEF_COMMENT*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'Data' '{' (ambiguity) fieldDefinitions+=FieldDefinition
	 *     fieldDefinitions+=FieldDefinition (ambiguity) '}' (rule end)
	 *     fieldDefinitions+=FieldDefinition (ambiguity) fieldDefinitions+=FieldDefinition
	 */
	protected void emit_Data_DEF_COMMENTTerminalRuleCall_2_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     DEF_COMMENT+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'Data' '{' (ambiguity) '}' (rule start)
	 */
	protected void emit_Data_DEF_COMMENTTerminalRuleCall_2_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     DEF_COMMENT*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'Init' '{' (ambiguity) '}' (rule start)
	 *     (rule start) 'Init' '{' (ambiguity) initDefinitions+=InitDefinition
	 *     initDefinitions+=InitDefinition (ambiguity) '}' (rule end)
	 *     initDefinitions+=InitDefinition (ambiguity) initDefinitions+=InitDefinition
	 */
	protected void emit_InitSection_DEF_COMMENTTerminalRuleCall_2_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     DEF_COMMENT+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'Init' '{' (ambiguity) '}' (rule start)
	 */
	protected void emit_InitSection_DEF_COMMENTTerminalRuleCall_2_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     DEF_COMMENT*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'OptionList' '{' (ambiguity) '}' (rule start)
	 *     (rule start) 'OptionList' '{' (ambiguity) optionListDefinitions+=UnderlyingListDefintion
	 *     optionListDefinitions+=UnderlyingListDefintion (ambiguity) '}' (rule end)
	 *     optionListDefinitions+=UnderlyingListDefintion (ambiguity) optionListDefinitions+=UnderlyingListDefintion
	 */
	protected void emit_OptionListSection_DEF_COMMENTTerminalRuleCall_2_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     DEF_COMMENT+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'OptionList' '{' (ambiguity) '}' (rule start)
	 */
	protected void emit_OptionListSection_DEF_COMMENTTerminalRuleCall_2_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     DEF_COMMENT*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'OptionMask' '{' (ambiguity) '}' (rule start)
	 *     (rule start) 'OptionMask' '{' (ambiguity) optionMaskDefinitions+=TypeMaskDefinition
	 *     optionMaskDefinitions+=TypeMaskDefinition (ambiguity) '}' (rule end)
	 *     optionMaskDefinitions+=TypeMaskDefinition (ambiguity) optionMaskDefinitions+=TypeMaskDefinition
	 */
	protected void emit_OptionMaskSection_DEF_COMMENTTerminalRuleCall_2_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     DEF_COMMENT+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'OptionMask' '{' (ambiguity) '}' (rule start)
	 */
	protected void emit_OptionMaskSection_DEF_COMMENTTerminalRuleCall_2_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     DEF_COMMENT*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'TypeMask' '{' (ambiguity) typeMaskDefinitions+=TypeMaskDefinition
	 *     typeMaskDefinitions+=TypeMaskDefinition (ambiguity) '}' (rule end)
	 *     typeMaskDefinitions+=TypeMaskDefinition (ambiguity) typeMaskDefinitions+=TypeMaskDefinition
	 */
	protected void emit_TypeMaskSection_DEF_COMMENTTerminalRuleCall_2_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     DEF_COMMENT+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'TypeMask' '{' (ambiguity) '}' (rule start)
	 */
	protected void emit_TypeMaskSection_DEF_COMMENTTerminalRuleCall_2_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     DEF_COMMENT*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'UnderlyingList' '{' (ambiguity) '}' (rule start)
	 *     (rule start) 'UnderlyingList' '{' (ambiguity) underlyingListDefinitions+=UnderlyingListDefintion
	 *     underlyingListDefinitions+=UnderlyingListDefintion (ambiguity) '}' (rule end)
	 *     underlyingListDefinitions+=UnderlyingListDefintion (ambiguity) underlyingListDefinitions+=UnderlyingListDefintion
	 */
	protected void emit_UnderlyingListSection_DEF_COMMENTTerminalRuleCall_2_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     DEF_COMMENT+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'UnderlyingList' '{' (ambiguity) '}' (rule start)
	 */
	protected void emit_UnderlyingListSection_DEF_COMMENTTerminalRuleCall_2_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     DEF_COMMENT*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'UnderlyingMask' '{' (ambiguity) '}' (rule start)
	 *     (rule start) 'UnderlyingMask' '{' (ambiguity) underlyingMaskDefinitions+=TypeMaskDefinition
	 *     underlyingMaskDefinitions+=TypeMaskDefinition (ambiguity) '}' (rule end)
	 *     underlyingMaskDefinitions+=TypeMaskDefinition (ambiguity) underlyingMaskDefinitions+=TypeMaskDefinition
	 */
	protected void emit_UnderlyingMaskSection_DEF_COMMENTTerminalRuleCall_2_0_a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     DEF_COMMENT+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'UnderlyingMask' '{' (ambiguity) '}' (rule start)
	 */
	protected void emit_UnderlyingMaskSection_DEF_COMMENTTerminalRuleCall_2_0_p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
