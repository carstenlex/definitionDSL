/**
 * generated by Xtext 2.9.2
 */
package ch.raiffeisen.ipricer.definition.definitionDSL.impl;

import ch.raiffeisen.ipricer.definition.definitionDSL.DefinitionDSLPackage;
import ch.raiffeisen.ipricer.definition.definitionDSL.OptionValproc;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Option Valproc</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ch.raiffeisen.ipricer.definition.definitionDSL.impl.OptionValprocImpl#getValproc <em>Valproc</em>}</li>
 *   <li>{@link ch.raiffeisen.ipricer.definition.definitionDSL.impl.OptionValprocImpl#getTclProc <em>Tcl Proc</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OptionValprocImpl extends OptionImpl implements OptionValproc
{
  /**
   * The default value of the '{@link #getValproc() <em>Valproc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValproc()
   * @generated
   * @ordered
   */
  protected static final String VALPROC_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getValproc() <em>Valproc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValproc()
   * @generated
   * @ordered
   */
  protected String valproc = VALPROC_EDEFAULT;

  /**
   * The default value of the '{@link #getTclProc() <em>Tcl Proc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTclProc()
   * @generated
   * @ordered
   */
  protected static final String TCL_PROC_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTclProc() <em>Tcl Proc</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTclProc()
   * @generated
   * @ordered
   */
  protected String tclProc = TCL_PROC_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OptionValprocImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DefinitionDSLPackage.Literals.OPTION_VALPROC;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getValproc()
  {
    return valproc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValproc(String newValproc)
  {
    String oldValproc = valproc;
    valproc = newValproc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DefinitionDSLPackage.OPTION_VALPROC__VALPROC, oldValproc, valproc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getTclProc()
  {
    return tclProc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTclProc(String newTclProc)
  {
    String oldTclProc = tclProc;
    tclProc = newTclProc;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DefinitionDSLPackage.OPTION_VALPROC__TCL_PROC, oldTclProc, tclProc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DefinitionDSLPackage.OPTION_VALPROC__VALPROC:
        return getValproc();
      case DefinitionDSLPackage.OPTION_VALPROC__TCL_PROC:
        return getTclProc();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DefinitionDSLPackage.OPTION_VALPROC__VALPROC:
        setValproc((String)newValue);
        return;
      case DefinitionDSLPackage.OPTION_VALPROC__TCL_PROC:
        setTclProc((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DefinitionDSLPackage.OPTION_VALPROC__VALPROC:
        setValproc(VALPROC_EDEFAULT);
        return;
      case DefinitionDSLPackage.OPTION_VALPROC__TCL_PROC:
        setTclProc(TCL_PROC_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DefinitionDSLPackage.OPTION_VALPROC__VALPROC:
        return VALPROC_EDEFAULT == null ? valproc != null : !VALPROC_EDEFAULT.equals(valproc);
      case DefinitionDSLPackage.OPTION_VALPROC__TCL_PROC:
        return TCL_PROC_EDEFAULT == null ? tclProc != null : !TCL_PROC_EDEFAULT.equals(tclProc);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (valproc: ");
    result.append(valproc);
    result.append(", tclProc: ");
    result.append(tclProc);
    result.append(')');
    return result.toString();
  }

} //OptionValprocImpl
