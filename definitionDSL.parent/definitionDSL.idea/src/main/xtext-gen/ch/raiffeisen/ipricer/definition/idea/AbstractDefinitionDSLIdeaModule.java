/*
 * generated by Xtext 2.9.2
 */
package ch.raiffeisen.ipricer.definition.idea;

import ch.raiffeisen.ipricer.definition.ide.contentassist.antlr.DefinitionDSLParser;
import ch.raiffeisen.ipricer.definition.ide.contentassist.antlr.internal.InternalDefinitionDSLLexer;
import ch.raiffeisen.ipricer.definition.idea.facet.DefinitionDSLFacetConfiguration;
import ch.raiffeisen.ipricer.definition.idea.facet.DefinitionDSLFacetType;
import ch.raiffeisen.ipricer.definition.idea.lang.DefinitionDSLElementTypeProvider;
import ch.raiffeisen.ipricer.definition.idea.lang.parser.DefinitionDSLParserDefinition;
import ch.raiffeisen.ipricer.definition.idea.lang.parser.DefinitionDSLPsiParser;
import ch.raiffeisen.ipricer.definition.idea.lang.parser.DefinitionDSLTokenTypeProvider;
import ch.raiffeisen.ipricer.definition.idea.lang.parser.antlr.DefinitionDSLAntlrTokenFileProvider;
import ch.raiffeisen.ipricer.definition.idea.parser.antlr.internal.PsiInternalDefinitionDSLLexer;
import com.google.inject.Binder;
import com.google.inject.name.Names;
import com.intellij.facet.FacetTypeId;
import com.intellij.lang.ParserDefinition;
import com.intellij.lang.PsiParser;
import org.eclipse.xtext.ide.LexerIdeBindings;
import org.eclipse.xtext.ide.editor.contentassist.antlr.IContentAssistParser;
import org.eclipse.xtext.idea.DefaultIdeaModule;
import org.eclipse.xtext.idea.facet.AbstractFacetConfiguration;
import org.eclipse.xtext.idea.lang.IElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.parser.antlr.IAntlrTokenFileProvider;
import org.eclipse.xtext.parser.antlr.Lexer;
import org.eclipse.xtext.parser.antlr.LexerBindings;
import org.eclipse.xtext.service.SingletonBinding;

/**
 * Manual modifications go to {@link DefinitionDSLIdeaModule}.
 */
@SuppressWarnings("all")
public abstract class AbstractDefinitionDSLIdeaModule extends DefaultIdeaModule {
	
	// contributed by org.eclipse.xtext.xtext.generator.idea.IdeaPluginGenerator
	public Class<? extends IAntlrTokenFileProvider> bindIAntlrTokenFileProvider() {
		return DefinitionDSLAntlrTokenFileProvider.class;
	}
	
	// contributed by org.eclipse.xtext.xtext.generator.idea.IdeaPluginGenerator
	public Class<? extends Lexer> bindLexer() {
		return PsiInternalDefinitionDSLLexer.class;
	}
	
	// contributed by org.eclipse.xtext.xtext.generator.idea.IdeaPluginGenerator
	public void configureRuntimeLexer(Binder binder) {
		binder.bind(Lexer.class)
			.annotatedWith(Names.named(LexerBindings.RUNTIME))
			.to(PsiInternalDefinitionDSLLexer.class);
	}
	
	// contributed by org.eclipse.xtext.xtext.generator.idea.IdeaPluginGenerator
	public Class<? extends PsiParser> bindPsiParser() {
		return DefinitionDSLPsiParser.class;
	}
	
	// contributed by org.eclipse.xtext.xtext.generator.idea.IdeaPluginGenerator
	public Class<? extends TokenTypeProvider> bindTokenTypeProvider() {
		return DefinitionDSLTokenTypeProvider.class;
	}
	
	// contributed by org.eclipse.xtext.xtext.generator.idea.IdeaPluginGenerator
	public Class<? extends ParserDefinition> bindParserDefinition() {
		return DefinitionDSLParserDefinition.class;
	}
	
	// contributed by org.eclipse.xtext.xtext.generator.idea.IdeaPluginGenerator
	@SingletonBinding
	public Class<? extends IElementTypeProvider> bindIElementTypeProvider() {
		return DefinitionDSLElementTypeProvider.class;
	}
	
	// contributed by org.eclipse.xtext.xtext.generator.idea.IdeaPluginGenerator
	public Class<? extends AbstractFacetConfiguration> bindAbstractFacetConfiguration() {
		return DefinitionDSLFacetConfiguration.class;
	}
	
	// contributed by org.eclipse.xtext.xtext.generator.idea.IdeaPluginGenerator
	public FacetTypeId bindFacetTypeIdToInstance() {
		return DefinitionDSLFacetType.TYPEID;
	}
	
	// contributed by org.eclipse.xtext.xtext.generator.idea.IdeaPluginGenerator
	public Class<? extends IContentAssistParser> bindIContentAssistParser() {
		return DefinitionDSLParser.class;
	}
	
	// contributed by org.eclipse.xtext.xtext.generator.idea.IdeaPluginGenerator
	public void configureContentAssistLexer(Binder binder) {
		binder.bind(org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer.class).annotatedWith(Names.named(LexerIdeBindings.CONTENT_ASSIST)).to(InternalDefinitionDSLLexer.class);
	}
	
}
